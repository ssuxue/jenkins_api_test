name: test decoder and encoder flow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the vta-bert branch
  # schedule:
  #   # * is a special character in YAML so you have to quote this string
  #   - cron: '04 8 * * *'
 
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
        mode-name:
          type: choice
          description: build version
          options: 
          - aie_noop
          - aie_build
          - aie_load
          - cpu
        model-name:
          type: choice
          description: model
          options: 
          - decoder
          - encoder
          - both

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"  
  
  lint:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Run git submodules
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive
      - name: lint check 
        run: |   
         echo '-------lint-------'

  test-decoder-encoder:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Run git submodules
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive
      - name: clone MellowCoco
        uses: actions/checkout@v3
        with:
          repository: ssuxue/MellowCoco
          path: utils/MellowCoco
          ref: main
      - name: Build docker image
        run: |
          ls -l
          echo "-------utils"
          ls -l utils
          echo "-------utils/MellowCoco"
          ls -l utils/MellowCoco
          echo "build docker images"
      - name: build tvm
        run: |
          echo "build tvm"
      - name: test encoder and decoder
        run: |
          ls -l
          echo "-------utils"
          ls -l utils
          echo "-------utils/MellowCoco"
          ls -l utils/MellowCoco
          echo "test encoder and decoder"
  test-input:
      runs-on: ubuntu-latest
      steps:
      - name: Print outputs
        run: |
          echo ${{ github.event_name }} 
          echo "${{ github.event.inputs.mode-name }} - ${{ github.event.inputs.model-name }}"

  test-1:
      runs-on: ubuntu-latest
      needs: [ test-decoder-encoder ]
      steps:
      - name: Print outputs
        run: |
          echo "test 1"
          sleep 5
  test-2:
      runs-on: ubuntu-latest
      needs: [ test-decoder-encoder ]
      steps:
      - name: Print outputs
        run: |
          echo "test 2"
          sleep 100
  test-3:
      runs-on: ubuntu-latest
      needs: [ test-decoder-encoder ]
      steps:
      - name: Print outputs
        run: |
          echo "test 3"
          sleep 50
  
  long-tests:
    runs-on: ubuntu-latest
    needs: [ test-decoder-encoder ]
    timeout-minutes: 60
    strategy:
      fail-fast: true
      # max-parallel: 1
      matrix:
        split_group: [1, 2, 3, 4, 5]
        config: [
          {
            name: AIE PSSIM,
            script: echo "hello AIE "
          }, {
            name: ASR,
            script: echo "ASR
          }, {
            name: ASR QDQ,
            script: echo "hello ASR QDQ"
          }, {
            name: LLM Arch,
            script: echo "hello LLM Arch"
          }
        ]

    name: Long tests - ${{ matrix.config.name }} ${{ matrix.split_group }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Run git submodules
        run: |
          ${{ matrix.config.script }}

  
  test-4:
      runs-on: ubuntu-latest
      continue-on-error: ${{ matrix.experimental }}
      strategy:
        fail-fast: true
        matrix:
          version: [6, 7, 8]
          experimental: [false]
          include:
            - version: 9
              experimental: true
      needs: [ test-decoder-encoder ]
      steps:
      - uses: actions/checkout@v4
      - name: Print outputs
        run: |
          echo "test 4"
          echo $PWD
          echo "
      
      # - name: cancelling
      #   if: failure()
      #   # uses: andymckay/cancel-action@0.3
      #   uses: ./.github/actions/cancel-actions
  check_error:
      runs-on: ubuntu-latest
      needs: [ test-1, test-2, test-3, test-4 ]
      if: '!cancelled()'
      steps:
      - uses: actions/checkout@v4
      # - name: cancelling
      #   uses: ./.github/actions/cancel-actions
      - name: Rerun Failed jobs
        if: always()
        uses: ./.github/actions/rerun-failed-jobs
        with:
          code: 2
          
